// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: musiclib.proto

package mlibgrpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BrowseType int32

const (
	BrowseType_BROWSE_TYPE_UNSPECIFIED  BrowseType = 0
	BrowseType_BROWSE_TYPE_FOLDER       BrowseType = 1
	BrowseType_BROWSE_TYPE_ALBUM_ARTIST BrowseType = 2
	BrowseType_BROWSE_TYPE_GENRE        BrowseType = 3
	BrowseType_BROWSE_TYPE_YEAR         BrowseType = 4
	BrowseType_BROWSE_TYPE_MODIFIED     BrowseType = 5
)

// Enum value maps for BrowseType.
var (
	BrowseType_name = map[int32]string{
		0: "BROWSE_TYPE_UNSPECIFIED",
		1: "BROWSE_TYPE_FOLDER",
		2: "BROWSE_TYPE_ALBUM_ARTIST",
		3: "BROWSE_TYPE_GENRE",
		4: "BROWSE_TYPE_YEAR",
		5: "BROWSE_TYPE_MODIFIED",
	}
	BrowseType_value = map[string]int32{
		"BROWSE_TYPE_UNSPECIFIED":  0,
		"BROWSE_TYPE_FOLDER":       1,
		"BROWSE_TYPE_ALBUM_ARTIST": 2,
		"BROWSE_TYPE_GENRE":        3,
		"BROWSE_TYPE_YEAR":         4,
		"BROWSE_TYPE_MODIFIED":     5,
	}
)

func (x BrowseType) Enum() *BrowseType {
	p := new(BrowseType)
	*p = x
	return p
}

func (x BrowseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BrowseType) Descriptor() protoreflect.EnumDescriptor {
	return file_musiclib_proto_enumTypes[0].Descriptor()
}

func (BrowseType) Type() protoreflect.EnumType {
	return &file_musiclib_proto_enumTypes[0]
}

func (x BrowseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BrowseType.Descriptor instead.
func (BrowseType) EnumDescriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{0}
}

type BrowseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        string     `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Search     string     `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Reverse    bool       `protobuf:"varint,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	BrowseType BrowseType `protobuf:"varint,4,opt,name=browse_type,json=browseType,proto3,enum=mlibgrpc.BrowseType" json:"browse_type,omitempty"`
}

func (x *BrowseRequest) Reset() {
	*x = BrowseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musiclib_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseRequest) ProtoMessage() {}

func (x *BrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musiclib_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseRequest.ProtoReflect.Descriptor instead.
func (*BrowseRequest) Descriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{0}
}

func (x *BrowseRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *BrowseRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *BrowseRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *BrowseRequest) GetBrowseType() BrowseType {
	if x != nil {
		return x.BrowseType
	}
	return BrowseType_BROWSE_TYPE_UNSPECIFIED
}

type BrowseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BrowseItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BrowseResponse) Reset() {
	*x = BrowseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musiclib_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseResponse) ProtoMessage() {}

func (x *BrowseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musiclib_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseResponse.ProtoReflect.Descriptor instead.
func (*BrowseResponse) Descriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{1}
}

func (x *BrowseResponse) GetItems() []*BrowseItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BrowseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uri      string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Folder   bool   `protobuf:"varint,3,opt,name=folder,proto3" json:"folder,omitempty"`
	ImageUri string `protobuf:"bytes,4,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
}

func (x *BrowseItem) Reset() {
	*x = BrowseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musiclib_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrowseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowseItem) ProtoMessage() {}

func (x *BrowseItem) ProtoReflect() protoreflect.Message {
	mi := &file_musiclib_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowseItem.ProtoReflect.Descriptor instead.
func (*BrowseItem) Descriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{2}
}

func (x *BrowseItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrowseItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *BrowseItem) GetFolder() bool {
	if x != nil {
		return x.Folder
	}
	return false
}

func (x *BrowseItem) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

type MediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        string     `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Search     string     `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Reverse    bool       `protobuf:"varint,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	BrowseType BrowseType `protobuf:"varint,4,opt,name=browse_type,json=browseType,proto3,enum=mlibgrpc.BrowseType" json:"browse_type,omitempty"`
}

func (x *MediaRequest) Reset() {
	*x = MediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musiclib_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaRequest) ProtoMessage() {}

func (x *MediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musiclib_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaRequest.ProtoReflect.Descriptor instead.
func (*MediaRequest) Descriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{3}
}

func (x *MediaRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MediaRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *MediaRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *MediaRequest) GetBrowseType() BrowseType {
	if x != nil {
		return x.BrowseType
	}
	return BrowseType_BROWSE_TYPE_UNSPECIFIED
}

type MediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uris []string `protobuf:"bytes,1,rep,name=uris,proto3" json:"uris,omitempty"`
}

func (x *MediaResponse) Reset() {
	*x = MediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_musiclib_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaResponse) ProtoMessage() {}

func (x *MediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_musiclib_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaResponse.ProtoReflect.Descriptor instead.
func (*MediaResponse) Descriptor() ([]byte, []int) {
	return file_musiclib_proto_rawDescGZIP(), []int{4}
}

func (x *MediaResponse) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

var File_musiclib_proto protoreflect.FileDescriptor

var file_musiclib_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x6c, 0x69, 0x62, 0x67, 0x72, 0x70, 0x63, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x69, 0x62, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x69, 0x62, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x0a, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x22, 0x89,
	0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x6c, 0x69, 0x62, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x72, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x2a,
	0xa6, 0x01, 0x0a, 0x0a, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x17, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x42,
	0x52, 0x4f, 0x57, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x4c, 0x42, 0x55, 0x4d, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x53, 0x54, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x47, 0x45, 0x4e, 0x52, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x52, 0x4f, 0x57,
	0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x04, 0x12, 0x18,
	0x0a, 0x14, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f,
	0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x05, 0x32, 0x89, 0x01, 0x0a, 0x0c, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x06, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x6c, 0x69, 0x62, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d,
	0x6c, 0x69, 0x62, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x16, 0x2e, 0x6d, 0x6c, 0x69, 0x62, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x6c, 0x69, 0x62,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x63, 0x74, 0x6f, 0x66, 0x75, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x6c,
	0x69, 0x62, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x6c, 0x69, 0x62, 0x67,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_musiclib_proto_rawDescOnce sync.Once
	file_musiclib_proto_rawDescData = file_musiclib_proto_rawDesc
)

func file_musiclib_proto_rawDescGZIP() []byte {
	file_musiclib_proto_rawDescOnce.Do(func() {
		file_musiclib_proto_rawDescData = protoimpl.X.CompressGZIP(file_musiclib_proto_rawDescData)
	})
	return file_musiclib_proto_rawDescData
}

var file_musiclib_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_musiclib_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_musiclib_proto_goTypes = []interface{}{
	(BrowseType)(0),        // 0: mlibgrpc.BrowseType
	(*BrowseRequest)(nil),  // 1: mlibgrpc.BrowseRequest
	(*BrowseResponse)(nil), // 2: mlibgrpc.BrowseResponse
	(*BrowseItem)(nil),     // 3: mlibgrpc.BrowseItem
	(*MediaRequest)(nil),   // 4: mlibgrpc.MediaRequest
	(*MediaResponse)(nil),  // 5: mlibgrpc.MediaResponse
}
var file_musiclib_proto_depIdxs = []int32{
	0, // 0: mlibgrpc.BrowseRequest.browse_type:type_name -> mlibgrpc.BrowseType
	3, // 1: mlibgrpc.BrowseResponse.items:type_name -> mlibgrpc.BrowseItem
	0, // 2: mlibgrpc.MediaRequest.browse_type:type_name -> mlibgrpc.BrowseType
	1, // 3: mlibgrpc.MusicLibrary.Browse:input_type -> mlibgrpc.BrowseRequest
	4, // 4: mlibgrpc.MusicLibrary.Media:input_type -> mlibgrpc.MediaRequest
	2, // 5: mlibgrpc.MusicLibrary.Browse:output_type -> mlibgrpc.BrowseResponse
	5, // 6: mlibgrpc.MusicLibrary.Media:output_type -> mlibgrpc.MediaResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_musiclib_proto_init() }
func file_musiclib_proto_init() {
	if File_musiclib_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_musiclib_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musiclib_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musiclib_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrowseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musiclib_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_musiclib_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_musiclib_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_musiclib_proto_goTypes,
		DependencyIndexes: file_musiclib_proto_depIdxs,
		EnumInfos:         file_musiclib_proto_enumTypes,
		MessageInfos:      file_musiclib_proto_msgTypes,
	}.Build()
	File_musiclib_proto = out.File
	file_musiclib_proto_rawDesc = nil
	file_musiclib_proto_goTypes = nil
	file_musiclib_proto_depIdxs = nil
}
